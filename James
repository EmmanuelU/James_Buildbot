#!/bin/bash
sleep 3
echo James v$version was started --BEGIN LOG >>james-build-log.txt
echo  >>james-build-log.txt
ver=0.8
date=$(date)
os=$(uname)
user=$(whoami)
TARGET_PRODUCT=xmc_doubleshot
java=$(type java)
outdate=$(date +%m%d%y)
url=http://dl.dropbox.com/u/40873980/pass.sh
clear
echo Running Start-up checks.
sleep 1
echo
if [ ! -d "build" ]
  then
    echo "No WildchildIcE build directory found!"
    	sleep 2
		echo exiting...
			sleep 1
				exit
fi
if [ -d "build" ]
  then
    echo "WildchildIcE build directory found!"
    	sleep 2
fi
clear
echo Running Start-up checks..
echo >>app.sh
## Will add download scripts for missing files later
echo command -v java >/dev/null 2>&1 || { echo >&2 "Java is not installed"; sleep 2; exit 1;} >>app.sh
echo command -v repo >/dev/null 2>&1 || { echo >&2 "Repo binary is not installed"; sleep 2; exit 1;} >>app.sh
echo command -v ccache >/dev/null 2>&1 || { echo >&2 "Ccache binary is not installed"; sleep 2; exit 1;} >>app.sh
echo command -v make >/dev/null 2>&1 || { echo >&2 "Make is not installed"; sleep 2; exit 1;} >>app.sh
echo command -v wget >/dev/null 2>&1 || { echo >&2 "wget is not installed"; sleep 2; exit 1;} >>app.sh
echo command -v wput >/dev/null 2>&1 || { echo >&2 "wput is not installed"; sleep 2; exit 1;} >>app.sh
chmod +x app.sh
./app.sh
rm app.sh
echo 
echo All required packages are installed | tee -a james-build-log.txt
echo  >>james-build-log.txt
sleep 2
clear
echo Running Start-up checks...
sleep 1
echo 
echo You are on $os
echo $java
java -version
sleep 3
clear

if [ -f james-build-log.txt ]
  then
    echo "Previous log exists, deleting..."
    	rm james-build-log.txt
fi
sleep 2
clear
echo Passed startup checks! >>james-build-log.txt
echo  >>james-build-log.txt
echo ===WildchildIcE-Builder-v$version===
echo 
echo Hello, my name is James! Nice to meet you $user
echo ==========================
echo It is $date
echo
echo  Press 1 if building a Nightly
echo  Press 2 if building an Official release
read -p "Please select your choice (1/2) " type
if [ "$type" = "1" ]; then
  clear 
  buildtype=Nightly  
  upload=ftp://xmcwildchild22:$pass@upload.goo.im/public_html/Roms/AOKP/Nightlies/Wildchild_IcE_Nightly_$outdate.zip
fi
if [ "$type" = "2" ]; then
  clear 
  buildtype=Stable 
  upload=ftp://xmcwildchild22:$pass@upload.goo.im/public_html/Roms/AOKP/Wildchild_IcE_Rom_v$ver.zip
fi
read -p "Press [Enter] to prepare the build enviroment "
clear
read -p "Do you wish to sync the repo and update trees first? [y or n] " yn
   case $yn in
         [Yy]* ) clear; echo syncing...; repo sync -j4; clear; echo Synced.;;
        [Nn]* ) clear; echo Did not sync.;;
        * ) echo "Please answer y or n."; sleep 2; exit;;
    esac
echo Type: $buildtype
echo =========
echo Setting up build enviroment...
sleep 2
echo 
echo >>james-build-log.txt
echo 
export USE_CCACHE=1 | tee -a james-build-log.txt
echo >>james-build-log.txt
prebuilt/linux-x86/ccache/ccache -M 50G | tee -a james-build-log.txt
echo >>james-build-log.txt
echo 
clear
echo >>james-build-log.txt
echo $buildtype for $TARGET_PRODUCT
echo =========
sleep 2
read -p "Do you wish to clean the enviroment first? (Y is suggested) [y or n] " yn
    case $yn in
        [Yy]* ) clear; echo cleaning...; make clean;;
        [Nn]* ) clear; echo Did not clean.;;
        * ) echo "Please answer y or n."; sleep 2; exit;;
    esac
echo =========
echo
read -p "Press [Enter] to start building "
clear
echo Building $buildtype for $TARGET_PRODUCT...
if [ -f build.sh ]
  then
    rm build.sh
fi
echo echo Locating trees... >>build.sh
echo sleep 2 >>build.sh 
echo . build/envsetup.sh >>build.sh
echo echo >>build.sh
echo echo Found trees >>build.sh
echo echo >>build.sh
echo echo Lunching for $TARGET_PRODUCT >>build.sh
echo lunch 4 >>build.sh
echo echo >>build.sh
echo echo Compiling... >>build.sh
echo mka xmc -i >>build.sh
chmod +x build.sh
./build.sh
rm build.sh
echo Building for $TARGET_PRODUCT on $TARGET_BUILD_VARIANT at $date >>james-build-log.txt
echo >>james-build-log.txt
echo
echo Done with zero errors 
sleep 3
echo
sleep 5
echo Uploading to server...
cd out/target/product/doubleshot
wget -q $url
. pass.sh
rm pass.sh
wput -v $TARGET_PRODUCT-ota-eng.$user.zip $upload  
echo Done
